1.   Promedio de puntuación de respuestas dadas por los admins

db.Respuestas.aggregate([
  {
    $match: {
      "autor.tipo": "admin",
      "puntuacion": { $exists: true, $ne: null }
    }
  },
  {
    $group: {
      _id: "$solicitudId",
      promedioPuntuacion: { $avg: "$puntuacion" },
      totalRespuestas: { $sum: 1 }
    }
  },
  {
    $sort: { promedioPuntuacion: -1 }
  },
  {
    $limit: 5
  },
  {
    $lookup: {
      from: "Solicitudes",
      localField: "_id",
      foreignField: "_id",
      as: "solicitud"
    }
  },
  {
    $unwind: "$solicitud"
  },
  {
    $project: {
      _id: 0,
      solicitudId: "$_id",
      descripcionSolicitud: "$solicitud.descripcion",
      promedioPuntuacion: 1,
      totalRespuestas: 1
    }
  }
],
  { maxTimeMS: 60000, allowDiskUse: true }
);

2. Personas con mas de 2 solicitudes y una calificacion menor a 3

db.getCollection('Usuarios').aggregate(
  [
    { $unwind: { path: '$solicitudes' } },
    {
      $lookup: {
        from: 'Solicitudes',
        localField: 'solicitudes.SolicitudId',
        foreignField: '_id',
        as: 'solicitud'
      }
    },
    { $unwind: { path: '$solicitud' } },
    {
      $group: {
        _id: '$_id',
        nombreCompleto: {
          $first: '$nombreCompleto'
        },
        solicitudes: {
          $addToSet: '$solicitud._id'
        },
        todasLasRespuestas: {
          $push: '$solicitud.Respuestas'
        }
      }
    },
    { $unwind: { path: '$todasLasRespuestas' } },
    {
      $lookup: {
        from: 'Respuestas',
        localField:
          'todasLasRespuestas.respuestaId',
        foreignField: '_id',
        as: 'respuesta'
      }
    },
    { $unwind: { path: '$respuesta' } },
    {
      $group: {
        _id: '$_id',
        nombreCompleto: {
          $first: '$nombreCompleto'
        },
        solicitudes: { $first: '$solicitudes' },
        peorCalificacion: {
          $min: '$respuesta.puntuacion'
        }
      }
    },
    {
      $project: {
        nombreCompleto: 1,
        SolicitudesRealizadas: {
          $size: '$solicitudes'
        },
        peorCalificacion: 1,
        _id: 0
      }
    },
    {
      $match: {
        SolicitudesRealizadas: { $gt: 2 }
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);

3. Calificación promedio de respuesta por tipo de solicitud

db.getCollection('Respuestas').aggregate(
  [
    {
      $lookup: {
        from: 'Solicitudes',
        localField: 'solicitudId',
        foreignField: '_id',
        as: 'solicitud'
      }
    },
    { $unwind: { path: '$solicitud' } },
    {
      $group: {
        _id: '$solicitud.tipo',
        promPuntuacion: { $avg: '$puntuacion' },
        cantidadRespuestas: { $sum: 1 }
      }
    },
    { $sort: { promPuntuacion: -1 } }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);


4. Usuarios que han subido evidencias

db.getCollection('Solicitudes').aggregate(
  [
    { $match: { evidencias: { $exists: true } } },
    {
      $group: {
        _id: '$usuarioId',
        cantidadEvidencias: {
          $sum: { $size: '$evidencias' }
        }
      }
    },
    {
      $lookup: {
        from: 'Usuarios',
        localField: '_id',
        foreignField: '_id',
        as: 'usuario'
      }
    },
    { $unwind: { path: '$usuario' } },
    {
      $project: {
        _id: 0,
        usuarioId: '$_id',
        nombreUsuario: '$usuario.nombreCompleto',
        cantidadEvidencias: 1
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);

5. Tiempo promedio de respuesta de los admins (en horas) por tipo de solicitud

db.Respuestas.aggregate([
  {
    $match: {
      "autor.tipo": "admin"
    }
  },
  {
    $lookup: {
      from: "Solicitudes",
      localField: "solicitudId",
      foreignField: "_id",
      as: "solicitud"
    }
  },
  { $unwind: "$solicitud" },
  {
    $project: {
      tipoSolicitud: "$solicitud.tipo",
      tiempoRespuestaHoras: {
        $divide: [
          { $subtract: ["$fechaRespuesta", "$solicitud.fechaHoraCreacion"] },
          1000 * 60 * 60 // milisegundos a horas
        ]
      }
    }
  },
  {
    $group: {
      _id: "$tipoSolicitud",
      tiempoPromedioHoras: { $avg: "$tiempoRespuestaHoras" },
      totalRespuestas: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      tipoSolicitud: "$_id",
      tiempoPromedioHoras: { $round: ["$tiempoPromedioHoras", 2] },
      totalRespuestas: 1
    }
  },
  { $sort: { tiempoPromedioHoras: 1 } }
],
  { maxTimeMS: 60000, allowDiskUse: true }
);

6. Residente con mayor cantidad de reclamos

db.Solicitudes.aggregate([
  {
    $match: {
      tipo: "Reclamo"
    }
  },
  {
    $lookup: {
      from: "Usuarios",
      localField: "usuarioId",
      foreignField: "_id",
      as: "usuario"
    }
  },
  {
    $unwind: "$usuario"
  },
  {
    $group: {
      _id: {
        idusuario: "$usuario._id",
        nombre_completo: "$usuario.nombreCompleto"
      },
      total_reclamos: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      cliente: "$_id.nombre_completo",
      total_reclamos: 1
    }
  },
  {
    $sort: {
      total_reclamos: -1
    }
  }
],
  { maxTimeMS: 60000, allowDiskUse: true }
);

7. Promedio general de calificaciones y promedio de respuestas por solicitud

db.Respuestas.aggregate([
  {
    $facet: {
      // Promedio general de calificaciones
      promedio_calificaciones: [
        {
          $group: {
            _id: null,
            promedio: { $avg: "$puntuacion" }
          }
        },
        {
          $project: {
            _id: 0,
            promedio: { $round: ["$promedio", 2] }
          }
        }
      ],
      // Promedio de respuestas por solicitud
      promedio_respuestas: [
        {
          $group: {
            _id: "$solicitudId",
            conteo: { $sum: 1 }
          }
        },
        {
          $group: {
            _id: null,
            promedio: { $avg: "$conteo" }
          }
        },
        {
          $project: {
            _id: 0,
            promedio: { $round: ["$promedio", 2] }
          }
        }
      ]
    }
  },
  {
    $project: {
      promedio_general_calificaciones: {
        $arrayElemAt: ["$promedio_calificaciones.promedio", 0]
      },
      promedio_respuestas_por_solicitud: {
        $arrayElemAt: ["$promedio_respuestas.promedio", 0]
      }
    }
  }
],
{
  maxTimeMS: 60000, allowDiskUse: true
});

8. 3 respuestas mejor calificadas de acuerdo a la fecha

db.Respuestas.aggregate([
  {
    $match: {
      fechaRespuesta: { $lte: new Date("2025-05-25T06:43:59Z") }
    }
  },
  {
    $sort: { puntuacion: -1 }
  },
  {
    $limit: 3
  },
  {
    $group: {
      _id: null,
      topRatedResponses: { $push: "$$ROOT" }
    }
  },
  {
    $project: {
      _id: 0,
      topRatedResponses: 1
    }
  }
],
{
  maxTimeMS: 60000,
  allowDiskUse: true
});

9. resumen de respuestas por solicitud

db.Respuestas.aggregate([
  {
    $group: {
      _id: "$solicitudId",
      totalRespuestas: { $sum: 1 },
      promedioPuntuacion: { $avg: "$puntuacion" },
      autoresUnicos: { $addToSet: "$autor.autorId" }
    }
  },
  {
    $project: {
      solicitudId: "$_id",
      totalRespuestas: 1,
      promedioPuntuacion: 1,
      totalAutoresUnicos: { $size: "$autoresUnicos" }
    }
  }
],
{
  maxTimeMS: 60000,
  allowDiskUse: true
});
